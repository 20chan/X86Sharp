namespace X86Sharp
{
    public enum InstructionType
    {
        #region DataTransfer
        MOV,
        CMOVE,
        CMOVZ = CMOVE,
        CMOVNE,
        CMOVNZ = CMOVNE,
        CMOVA,
        CMOVNBE = CMOVA,
        CMOVAE,
        CMOVNB = CMOVAE,
        CMOVBE,
        CMOVNA = CMOVBE,
        CMOVG,
        CMOVNLE = CMOVG,
        CMOVL,
        CMOVNGE = CMOVL,
        CMOVLE,
        CMOVNG = CMOVLE,
        CMOVC,
        CMOVNC,
        CMOVO,
        CMOVNO,
        CMOVS,
        CMOVNS,
        CMOVP,
        CMOVPE = CMOVP,
        CMOVNP,
        CMOVPO = CMOVNP,
        XCHG,
        BSWAP,
        XADD,
        CMPXCHG,
        CMPXCHG8B,
        PUSH,
        POP,
        PUSHA,
        PUSHAD = PUSHA,
        POPA,
        POPAD = POPA,
        CWD,
        CDQ = CWD,
        CBW,
        CWDE = CBW,
        MOVSX,
        MOVZX,
        #endregion
        #region BinaryArithmetic
        ADCX,
        ADOX,
        ADD,
        ADC,
        SUB,
        SBB,
        IMUL,
        MUL,
        IDIV,
        DIV,
        INC,
        DEC,
        NEG,
        CMP,
        #endregion
        #region DecimalArithmetic
        DAA,
        DAS,
        AAA,
        AAS,
        AAM,
        AAD,
        #endregion
        #region LogicalArithmetic
        AND,
        OR,
        XOR,
        NOT,
        #endregion
        #region Shift&Rotate
        SAR,
        SHR,
        SAL,
        SHL = SAL,
        SHRD,
        SHLD,
        ROR,
        ROL,
        RCR,
        RCL,
        #endregion,
        #region Bit&Byte
        BT,
        BTS,
        BTR,
        BTC,
        BSF,
        BSR,
        SETE,
        SETZ = SETE,
        SETNE,
        SETNZ = SETNE,
        SETA,
        SETNBE = SETA,
        SETAE,
        SETNB = SETAE,
        SETNC = SETAE,
        SETB,
        SETNAE = SETB,
        SETC = SETB,
        SETBE,
        SETNA = SETBE,
        SETG,
        SETNLE = SETG,
        SETGE,
        SETNL = SETGE,
        SETL,
        SETNGE = SETL,
        SETLE,
        SETNG = SETLE,
        SETS,
        SETNS,
        SETO,
        SETNO,
        SETPE,
        SETP = SETPE,
        SETPO,
        SETNP = SETPO,
        TEST,
        CRC32,
        POPCNT,
        #endregion
        #region ControlTransfer
        JMP,
        JE,
        JZ = JE,
        JNE,
        JNZ = JNE,
        JA,
        JNBE = JA,
        JAE,
        JNB = JAE,
        JB,
        JNAE = JB,
        JBE,
        JNA = JBE,
        JG,
        JNLE = JG,
        JGE,
        JNL = JGE,
        JL,
        JNGE = JL,
        JLE,
        JNG = JLE,
        JC,
        JNC,
        JO,
        JNO,
        JS,
        JNS,
        JPO,
        JNP = JPO,
        JPE,
        JP = JPE,
        JCXZ,
        JECXZ = JCXZ,
        LOOP,
        LOOPZ,
        LOOPE = LOOPZ,
        LOOPNZ,
        LOOPNE = LOOPNZ,
        CALL,
        RET,
        IRET,
        INT,
        INTO,
        BOUND,
        ENTER,
        LEAVE,
        #endregion
        #region String
        MOVS,
        MOVSB = MOVS,
        MOVSW = MOVS,
        MOVSD = MOVS,
        CMPS,
        CMPSB = CMPS,
        CMPSW = CMPS,
        CMPSD = CMPS,
        SCAS,
        SCASB = SCAS,
        SCASW = SCAS,
        SCASD = SCAS,
        LODS,
        LODSB = LODS,
        LODSW = LODS,
        LODSD = LODS,
        STOS,
        STOSB = STOS,
        STOSW = STOS,
        STOSD = STOS,
        REP,
        REPE,
        REPZ = REPE,
        REPNE,
        REPNZ = REPNE,
        #endregion
        #region I/O
        IN,
        OUT,
        INS,
        INSB = INS,
        INSW = INS,
        INSD = INS,
        OUTS,
        OUTSB = OUTS,
        OUTSW = OUTS,
        OUTSD = OUTS,
        #endregion
        #region EFLAG
        STC,
        CLC,
        CMC,
        CLD,
        STD,
        LAHF,
        SAHF,
        PUSHF,
        PUSHFD = PUSHF,
        POPF,
        POPFD = POPF,
        STI,
        CLI,
        #endregion
        #region SetmentRegister
        LDS,
        LES,
        LFS,
        LGS,
        LSS,
        #endregion
        #region Misc
        LEA,
        NOP,
        UD2,
        XLAT,
        XLATB = XLAT,
        CPUID,
        MOVBE,
        PREFETCHW,
        PREFETCHWT1,
        CLFLUSH,
        CLUFLUSHOPT,
        #endregion
        #region UserModeExtendedStateSave/Restore
        XSAVE,
        XSAVEC,
        XSAVEOPT,
        XRSTOR,
        XGETBV,
        #endregion
        #region RandomNumberGenerator
        RDRAND,
        RDSEED,
        #endregion
        #region BMI1, BMI2
        ANDN,
        BEXTR,
        BLSI,
        BLSMSK,
        BLSR,
        BZHI,
        LZCNT,
        MULX,
        PDEP,
        PEXT,
        RORX,
        SARX,
        SHLX,
        SHRX,
        TZCNT,
        #endregion
    }
}
